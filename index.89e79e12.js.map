{"mappings":"oeAAAA,EAAA,S,yCCAAC,EAAAD,EAAA,S,WCCuBE,SAASC,cAAc,uBACvBD,SAASC,cAAc,yBAChCD,SAASC,cAAc,sCACvBD,SAASC,cAAc,sC,aDCrBD,SAASC,cAAc,YACXD,SAASC,cAAc,yBAC9B,IAAI,EAAAF,EAAAG,cEPzBJ,EAAA,S,4EASA,MAAMK,EAAUH,SAASC,cAAc,YACjCG,EAAUJ,SAASC,cAAc,uBAEjB,IAAI,EAAAF,EAAAG,cAqB1BF,SACGC,cAAc,eACdI,iBAAiB,UAjBOC,MAAMC,IAC/BA,EAAMC,iBACN,MAAMC,EAAQF,EAAMG,OAAOT,cAAc,sBAAsBU,MAC/DP,EAAQQ,QAAQH,MAAQA,EACxBL,EAAQS,oBAAoB,QAASC,EAAAC,aACjCN,IACFL,EAAQS,oBAAoB,QAASC,EAAAE,eATvCb,EAAQc,UAAY,IAYlB,EAAAH,EAAAI,oBAAmB,EAAGT,GAEtBL,EAAQC,iBAAiB,QAASS,EAAAE,e,iCHpBtC,EAAAG,EAAAC,mBAAkB,IAClB,EAAAC,EAAAC,uBACA,EAAAC,EAAAC","sources":["src/index.js","src/js/pagination.js","src/js/refs.js","src/js/searchMovie.js"],"sourcesContent":["import './js/openFooterMdl';\nimport { localStorage } from './js/localStorage';\nimport { modalFunctions } from './js/userLogin';\nimport { openMovieInfoModal } from './js/openMovieInfoModal';\nimport { setPagination } from './js/pagination';\nimport { searchMovies } from './js/searchMovie';\nimport { renderHomeGallery } from './js/renderGallery';\nimport { setPage } from './js/setPage';\n\nrenderHomeGallery(1);\nopenMovieInfoModal();\nmodalFunctions();\n","import { FetchMoveApi } from \"./FetchMovie\";\nimport { compileGenreDictionary } from \"./compileGenreDictionary\";\nimport { refs } from \"./refs\";\nimport { openMovieInfoModal } from \"./openMovieInfoModal\";\n\nconst wrapper = document.querySelector(\".wrapper\");\nconst paginationContainer = document.querySelector(\".pagination-container\");\nconst fetchMoveApi = new FetchMoveApi();\n\n// export function setPagination(page){\n//     let pageListMurkup = '';\n//     fetchMoveApi.getTrendDay(page)\n//         .then(response => {const {total_page, page} = response})\n//         .then(data => {\n//         compileGenreDictionary()\n//         .then(genre_dictionary => {\n//           data.results.forEach(element => {\n//             const draft = createLibraryCard(element, genre_dictionary);\n//             wrapper.insertAdjacentHTML('beforeend', draft);\n//           });\n//         });\n//       });\n\n// }\n\n\nfunction topFunction() {\n    document.body.scrollTop = 0;\n    document.documentElement.scrollTop = 0;\n  }\n\n\nexport async function setPagination(page) {\n    refs.paginationNumbers.innerHTML = '';\n    const response = await fetchMoveApi.getTrendDay(page);\n    const totalNumberOfPages = await response.total_pages;\n    let currentPage = await response.page;\n    let paginationMArkup = '';\n\n    if (currentPage > 1) {\n      paginationMArkup += `<button type=\"button\" class=\"pagination-container__prev-button\">\n      &#8656\n  </button>`;\n    }\n\n    for (let i = 1; i <= totalNumberOfPages; i += 1) {\n      if (\n        i == 1 ||\n        i == totalNumberOfPages ||\n        i == currentPage ||\n        (i > currentPage && i <= currentPage + 2) ||\n        (i < currentPage && i >= currentPage - 2) ||\n        (currentPage == 1 && totalNumberOfPages > 4 && i < 8) ||\n        (currentPage == 2 && totalNumberOfPages > 5 && i < 8) ||\n        (currentPage == 3 && totalNumberOfPages > 6 && i < 8) ||\n        (currentPage == 4 && totalNumberOfPages > 7 && i < 8) ||\n        (currentPage == totalNumberOfPages &&\n          totalNumberOfPages > 7 &&\n          i > totalNumberOfPages - 7) ||\n        (currentPage == totalNumberOfPages - 1 &&\n          totalNumberOfPages > 7 &&\n          i > totalNumberOfPages - 7) ||\n        (currentPage == totalNumberOfPages - 2 &&\n          totalNumberOfPages > 7 &&\n          i > totalNumberOfPages - 7) ||\n        (currentPage == totalNumberOfPages - 3 &&\n          totalNumberOfPages > 7 &&\n          i > totalNumberOfPages - 7)\n      ) {\n        paginationMArkup += `<button type=\"button\" class=\"pagination-container__button\" data-id=\"${i}\">${i}</button>`;\n      }\n    }\n    if (totalNumberOfPages > 2 && totalNumberOfPages !== currentPage) {\n      paginationMArkup += `<button type=\"button\" class=\"pagination-container__next-button\">&#8658\n      </button>`;\n    }\n\n\n    refs.paginationNumbers.innerHTML = paginationMArkup;\n\n    const paginationButtons = document.querySelectorAll(\n        '.pagination-numbers button'\n      );\n\n      function createDotsbuttons() {\n        const firstDotButtonLocation = document.querySelector(\n          'button[data-id=\"1\"]'\n        );\n        const lastDotButtonLocation = document.querySelector(\n          `button[data-id=\"${totalNumberOfPages}\"`\n        );\n        const firstDotButton = document.createElement('button');\n        firstDotButton.textContent = '...';\n        firstDotButton.classList.add('pagination-container__first-dot-button');\n        const lastDotButton = document.createElement('button');\n        lastDotButton.textContent = '...';\n        lastDotButton.classList.add('pagination-container__last-dot-button');\n\n        if (currentPage > 4) {\n          firstDotButtonLocation.after(firstDotButton);\n        }\n\n        if (currentPage < totalNumberOfPages - 3)\n          lastDotButtonLocation.before(lastDotButton);\n      }\n      createDotsbuttons();\n\n      function handleActiveButton() {\n        paginationButtons.forEach(button => {\n          button.classList.remove('pagination-container__button--active');\n          let pageIndex = button.textContent;\n          if (pageIndex == currentPage) {\n            button.classList.add('pagination-container__button--active');\n          }\n        });\n      }\n\n      handleActiveButton();\n\n\n      paginationButtons.forEach(button => {\n        button.addEventListener('click', event => {\n          if (event.target.classList.contains('pagination-container__button')) {\n            topFunction();\n            // loader.on();\n            let pageNumber = event.target.textContent;\n            nextfunction(pageNumber).then(() => {\n              openMovieInfoModal();\n              loader.off();\n\n            });\n          } else if (\n            event.target.classList.contains('pagination-container__prev-button')\n          ) {\n            topFunction();\n            // loader.on();\n            currentPage--;\n            nextfunction(currentPage).then(() => {\n              openMovieInfoModal();\n              loader.off();\n            });\n          } else if (\n            event.target.classList.contains('pagination-container__next-button')\n          ) {\n            topFunction();\n            // loader.on();\n            currentPage++;\n            nextfunction(currentPage).then(() => {\n              openMovieInfoModal();\n              loader.off();\n            });\n          }\n        });\n      });\n}","export const refs = {\n    paginationNumbers: document.querySelector('.pagination-numbers'),\n  paginationContainer: document.querySelector('.pagination-container'),\n  nextButton: document.querySelector('.pagination-container__next-button'),\n  prevButton: document.querySelector('.pagination-container__prev-button'),\n};\n","export { search_movies };\nimport { createHomeCard } from './createCard';\nimport { compileGenreDictionary } from './compileGenreDictionary';\nimport { FetchMoveApi } from './FetchMovie';\nimport './openFooterMdl';\nimport { generateButtons } from './generateButtons';\nimport { setPageSearch, setPageHome } from './setPage';\nimport { renderSearchMovies } from './setPage';\n\nconst wrapper = document.querySelector('.wrapper');\nconst buttons = document.querySelector('.pagination-numbers');\n\nconst search_movies = new FetchMoveApi();\n\nfunction clearResults() {\n  wrapper.innerHTML = '';\n}\n\nconst firstSearchHandler = async event => {\n  event.preventDefault();\n  const query = event.target.querySelector('.search-bar__input').value;\n  buttons.dataset.query = query;\n  buttons.removeEventListener('click', setPageHome);\n  if (query) {\n    buttons.removeEventListener('click', setPageSearch);\n    clearResults();\n\n    renderSearchMovies(1, query);\n\n    buttons.addEventListener('click', setPageSearch);\n  }\n};\n\ndocument\n  .querySelector('.search-bar')\n  .addEventListener('submit', firstSearchHandler);\n"],"names":["parcelRequire","$4TIlm","document","querySelector","FetchMoveApi","$9488da62bf55fdf0$var$wrapper","$9488da62bf55fdf0$var$buttons","addEventListener","async","event","preventDefault","query","target","value","dataset","removeEventListener","$27qvy","setPageHome","setPageSearch","innerHTML","renderSearchMovies","$aO2mr","renderHomeGallery","$a0gzN","openMovieInfoModal","$feD1y","modalFunctions"],"version":3,"file":"index.89e79e12.js.map"}