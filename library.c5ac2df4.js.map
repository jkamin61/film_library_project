{"mappings":"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","sources":["src/library.js","src/js/openMovieInfoModalLibrary.js","src/js/createMovieInfoLibrary.js"],"sourcesContent":["import './js/openFooterMdl';\nimport './js/localStorage';\nimport { renderLibraryGallery } from './js/renderGallery';\nimport { modalFunctions } from './js/userLogin';\nimport { openMovieInfoModalLibrary } from './js/openMovieInfoModalLibrary';\n\nmodalFunctions();\nrenderLibraryGallery();\nopenMovieInfoModalLibrary();\n","export { openMovieInfoModalLibrary };\nimport { FetchMoveApi } from './FetchMovie';\nimport { createMovieInfoLibrary } from './createMovieInfoLibrary';\nimport { renderLibraryWatched, renderLibraryQueue } from './renderGallery';\n\n//Used variables\nconst backdrop = document.querySelector('.movie-info__backdrop');\nconst fetch_movie = new FetchMoveApi();\n\nfunction returnID(target) {\n  // Return ID of clicked movie Card\n  //(recursive function - checking all parent nodes until movie-card)\n\n  if (target.className === 'movie-card') {\n    return target.dataset.id;\n  } else {\n    return returnID(target.parentNode);\n  }\n}\n\nfunction returnIndex(target) {\n  // Return ID of clicked movie Card\n  //(recursive function - checking all parent nodes until movie-card)\n\n  if (target.className === 'movie-card') {\n    return target.dataset.index;\n  } else {\n    return returnIndex(target.parentNode);\n  }\n}\n\nfunction returnSource(target) {\n  // Return ID of clicked movie Card\n  //(recursive function - checking all parent nodes until movie-card)\n\n  if (target.className === 'movie-card') {\n    return target.dataset.source;\n  } else {\n    return returnSource(target.parentNode);\n  }\n}\n\nconst handleCloseClick = event => {\n  //Handle closing\n  if (\n    !(event.target.className === 'movie-info__backdrop') |\n    (event.target.className === 'movie-info__close')\n  ) {\n    backdrop.classList.toggle('is-hidden');\n    backdrop.innerHTML = '';\n\n    window.removeEventListener('click', handleCloseClick);\n    backdrop.removeEventListener('keydown', handleCloseESC);\n    return;\n  }\n};\n\nconst handleCloseESC = event => {\n  //Handle closing\n  if (event.code === 'Escape') {\n    backdrop.classList.toggle('is-hidden');\n    backdrop.innerHTML = '';\n\n    backdrop.removeEventListener('click', handleCloseClick);\n    window.removeEventListener('keydown', handleCloseESC);\n    return;\n  }\n};\n\nconst handleRemoveButton = event => {\n  let data_array = '';\n  const source = event.target.dataset.source;\n  const index = event.target.dataset.index;\n\n  if (source === 'watched') {\n    data_array = JSON.parse(localStorage.getItem('addedToWatched'));\n    data_array.splice(index, 1);\n    const stringified_data = JSON.stringify(data_array);\n    localStorage.setItem('addedToWatched', stringified_data);\n    renderLibraryWatched();\n  }\n  if (source === 'queue') {\n    data_array = JSON.parse(localStorage.getItem('addedToQueue'));\n    data_array.splice(index, 1);\n    const stringified_data = JSON.stringify(data_array);\n    localStorage.setItem('addedToQueue', stringified_data);\n    renderLibraryQueue();\n  }\n};\n\nconst handleOpenClick = event => {\n  // Handle click on movie Card\n  if (event.target.className === 'wrapper') {\n    return;\n  }\n\n  const current_id = returnID(event.target);\n  const source = returnSource(event.target);\n  const current_index = returnIndex(event.target);\n  let button = '';\n\n  backdrop.classList.remove('is-hidden');\n\n  fetch_movie.getDetail(current_id).then(data => {\n    backdrop.innerHTML = createMovieInfoLibrary(data, current_index, source);\n    backdrop.addEventListener('click', handleCloseClick);\n    window.addEventListener('keydown', handleCloseESC);\n    button = document.querySelector('#remove-button');\n    button.addEventListener('click', handleRemoveButton);\n  });\n};\n\nfunction openMovieInfoModalLibrary() {\n  //Main function to handle modal with movie details\n  const wrapper = document.querySelector('.wrapper');\n  wrapper.addEventListener('click', handleOpenClick);\n}\n","export { createMovieInfoLibrary };\n\nfunction genreIdToList(genre_ids) {\n  /**\n   * Function returning string with listed genres names from array of ids. Used variables:\n   * genre_ids: array of genre ids to be compiled into list\n   * genre_dict: dictionary connecting genre ID to name\n   */\n  const max_genres = 5;\n  let genres = '';\n  genre_ids.forEach((element, index) => {\n    if (index === 0) {\n      genres += element.name;\n    } else if (index < max_genres) {\n      genres += `, ${element.name}`;\n    }\n  });\n  if (genre_ids.length > max_genres) {\n    genres += '...';\n  }\n\n  return genres;\n}\n\nfunction returnButton(source, current_index) {\n  if (source === 'watched') {\n    return `<button id=\"remove-button\" class=\"movie-info__button movie-info__button--watched\" data-source=\"${source}\" data-index=\"${current_index}\">REMOVE FROM WATCHED</button>`;\n  }\n  if (source === 'queue') {\n    return `<button id=\"remove-button\" class=\"movie-info__button movie-info__button--queue\" data-source=\"${source}\" data-index=\"${current_index}\">REMOVE FROM QUEUE</button>`;\n  } else {\n    return 'ERROR';\n  }\n}\n\nfunction createMovieInfoLibrary(data, current_index, source) {\n  /**\n   * Function returning markup of movie card on homepage. Used variables:\n   * data: fetched data of single movie\n   * genre_dict: dictionary connecting genre ID to name\n   */\n\n  //Getting needed data\n  const {\n    poster_path,\n    overview,\n    genres,\n    original_title,\n    title,\n    popularity,\n    vote_count,\n    vote_average,\n  } = data;\n\n  //Preparing data\n  let image_src = '';\n  if (poster_path) {\n    image_src = `https://image.tmdb.org/t/p/w500${poster_path}`;\n  } else {\n    image_src =\n      'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg?20200913095930';\n  }\n  let genres_list = genreIdToList(genres);\n  const score = parseFloat(vote_average).toFixed(1);\n  const popularity_trimmed = parseFloat(popularity).toFixed(1);\n\n  const markup = `+\n    <div class=\"movie-info\">\n        <div class=\"movie-info__container\">\n          <button class=\"movie-info__close\">&#10005;</button>\n            <div class=\"movie-info__column\">\n                <img class=\"movie-info__poster\" src=\"${image_src}\" />\n            </div>\n            <div class=\"movie-info__column\">\n                <h2 class=\"movie-info__title\">${title.toUpperCase()}</h2>\n                <table class=\"movie-info__details\">\n                    <tr class=\"movie-info__table-row\">\n                        <td class=\"movie-info__table-legend\">Vote/Votes</td>\n                        <td class=\"movie-info__table-content\"><span class=\"movie-info__table-content--score\">${score}</span> / ${vote_count}</td>\n                    </tr>\n                    <tr class=\"movie-info__table-row\">\n                        <td class=\"movie-info__table-legend\">Popularity</td>\n                        <td class=\"movie-info__table-content\">${popularity_trimmed}</td>\n                    </tr>\n                    <tr class=\"movie-info__table-row\">\n                        <td class=\"movie-info__table-legend\">Original Title</td>\n                        <td class=\"movie-info__table-content\">${original_title.toUpperCase()}</td>\n                    </tr>\n                    <tr class=\"movie-info__table-row\">\n                        <td class=\"movie-info__table-legend\">Genre</td>\n                        <td class=\"movie-info__table-content\">${genres_list}</td>\n                    </tr>\n                </table>\n            \n\n            <p>ABOUT</p>\n            <p>\n              ${overview}\n            </p>\n            \n            <div class=\"movie-info__buttons\">\n            ${returnButton(source, current_index)}\n            </div>\n          </div>\n        </div>\n    </div>`;\n\n  return markup;\n}\n"],"names":["parcelRequire","$4TIlm","$19bb5da87f12d116$export$3193d057fcf08df3","data","current_index","source","poster_path","overview","genres","original_title","title","popularity","vote_count","vote_average","image_src","genres_list","genre_ids","forEach","element","index","name","length","$19bb5da87f12d116$var$genreIdToList","score","parseFloat","toFixed","popularity_trimmed","markup","toUpperCase","$19bb5da87f12d116$var$returnButton","$cf3bdf0293932d38$var$backdrop","document","querySelector","$cf3bdf0293932d38$var$fetch_movie","FetchMoveApi","$cf3bdf0293932d38$var$returnID","target","className","dataset","id","parentNode","$cf3bdf0293932d38$var$returnIndex","$cf3bdf0293932d38$var$returnSource","$cf3bdf0293932d38$var$handleCloseClick","event","classList","toggle","innerHTML","window","removeEventListener","$cf3bdf0293932d38$var$handleCloseESC","code","$cf3bdf0293932d38$var$handleRemoveButton","data_array","JSON","parse","localStorage","getItem","splice","stringified_data","stringify","setItem","$aO2mr","renderLibraryWatched","renderLibraryQueue","$cf3bdf0293932d38$var$handleOpenClick","current_id","button","remove","getDetail","then","addEventListener","$feD1y","modalFunctions","renderLibraryGallery"],"version":3,"file":"library.c5ac2df4.js.map"}