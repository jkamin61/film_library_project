{"mappings":"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","sources":["src/index.js","src/js/pagination.js","src/js/compileGenreDictionary.js","src/js/refs.js","src/js/searchMovie.js","src/js/renderGallery.js"],"sourcesContent":["import './js/openFooterMdl';\nimport { localStorage } from './js/localStorage';\nimport { modalFunctions } from './js/userLogin';\nimport { openMovieInfoModal } from './js/openMovieInfoModal';\nimport { setPagination } from './js/pagination';\nimport { searchMovies } from './js/searchMovie';\nimport { renderHomeGallery } from './js/renderGallery';\n\nlet current_page = 1;\n\nrenderHomeGallery(current_page);\nopenMovieInfoModal();\nmodalFunctions();\nsetPagination(1);\n","import { FetchMoveApi } from \"./FetchMove\";\nimport { compileGenreDictionary } from \"./compileGenreDictionary\";\nimport { refs } from \"./refs\";\nimport { openMovieInfoModal } from \"./openMovieInfoModal\";\n\nconst wrapper = document.querySelector(\".wrapper\");\nconst paginationContainer = document.querySelector(\".pagination-container\");\nconst fetchMoveApi = new FetchMoveApi();\n\n// export function setPagination(page){\n//     let pageListMurkup = '';\n//     fetchMoveApi.getTrendDay(page)\n//         .then(response => {const {total_page, page} = response})\n//         .then(data => {\n//         compileGenreDictionary()\n//         .then(genre_dictionary => {\n//           data.results.forEach(element => {\n//             const draft = createLibraryCard(element, genre_dictionary);\n//             wrapper.insertAdjacentHTML('beforeend', draft);\n//           });\n//         });\n//       });\n      \n// }\n\n\nfunction topFunction() {\n    document.body.scrollTop = 0; \n    document.documentElement.scrollTop = 0; \n  }\n\n\nexport async function setPagination(page) {\n    refs.paginationNumbers.innerHTML = '';\n    const response = await fetchMoveApi.getTrendDay(page);\n    const totalNumberOfPages = await response.total_pages;\n    let currentPage = await response.page;\n    let paginationMArkup = '';\n  \n    if (currentPage > 1) {\n      paginationMArkup += `<button type=\"button\" class=\"pagination-container__prev-button\">\n      &#8656\n  </button>`;\n    }\n  \n    for (let i = 1; i <= totalNumberOfPages; i += 1) {\n      if (\n        i == 1 ||\n        i == totalNumberOfPages ||\n        i == currentPage ||\n        (i > currentPage && i <= currentPage + 2) ||\n        (i < currentPage && i >= currentPage - 2) ||\n        (currentPage == 1 && totalNumberOfPages > 4 && i < 8) ||\n        (currentPage == 2 && totalNumberOfPages > 5 && i < 8) ||\n        (currentPage == 3 && totalNumberOfPages > 6 && i < 8) ||\n        (currentPage == 4 && totalNumberOfPages > 7 && i < 8) ||\n        (currentPage == totalNumberOfPages &&\n          totalNumberOfPages > 7 &&\n          i > totalNumberOfPages - 7) ||\n        (currentPage == totalNumberOfPages - 1 &&\n          totalNumberOfPages > 7 &&\n          i > totalNumberOfPages - 7) ||\n        (currentPage == totalNumberOfPages - 2 &&\n          totalNumberOfPages > 7 &&\n          i > totalNumberOfPages - 7) ||\n        (currentPage == totalNumberOfPages - 3 &&\n          totalNumberOfPages > 7 &&\n          i > totalNumberOfPages - 7)\n      ) {\n        paginationMArkup += `<button type=\"button\" class=\"pagination-container__button\" data-id=\"${i}\">${i}</button>`;\n      }\n    }\n    if (totalNumberOfPages > 2 && totalNumberOfPages !== currentPage) {\n      paginationMArkup += `<button type=\"button\" class=\"pagination-container__next-button\">&#8658\n      </button>`;\n    }\n\n  \n    refs.paginationNumbers.innerHTML = paginationMArkup;\n\n    const paginationButtons = document.querySelectorAll(\n        '.pagination-numbers button'\n      );\n    \n      function createDotsbuttons() {\n        const firstDotButtonLocation = document.querySelector(\n          'button[data-id=\"1\"]'\n        );\n        const lastDotButtonLocation = document.querySelector(\n          `button[data-id=\"${totalNumberOfPages}\"`\n        );\n        const firstDotButton = document.createElement('button');\n        firstDotButton.textContent = '...';\n        firstDotButton.classList.add('pagination-container__first-dot-button');\n        const lastDotButton = document.createElement('button');\n        lastDotButton.textContent = '...';\n        lastDotButton.classList.add('pagination-container__last-dot-button');\n    \n        if (currentPage > 4) {\n          firstDotButtonLocation.after(firstDotButton);\n        }\n    \n        if (currentPage < totalNumberOfPages - 3)\n          lastDotButtonLocation.before(lastDotButton);\n      }\n      createDotsbuttons();\n    \n      function handleActiveButton() {\n        paginationButtons.forEach(button => {\n          button.classList.remove('pagination-container__button--active');\n          let pageIndex = button.textContent;\n          if (pageIndex == currentPage) {\n            button.classList.add('pagination-container__button--active');\n          }\n        });\n      }\n    \n      handleActiveButton();\n\n\n      paginationButtons.forEach(button => {\n        button.addEventListener('click', event => {\n          if (event.target.classList.contains('pagination-container__button')) {\n            topFunction();\n            // loader.on();\n            let pageNumber = event.target.textContent;\n            nextfunction(pageNumber).then(() => {\n              openMovieInfoModal();\n              loader.off();\n              \n            });\n          } else if (\n            event.target.classList.contains('pagination-container__prev-button')\n          ) {\n            topFunction();\n            // loader.on();\n            currentPage--;\n            nextfunction(currentPage).then(() => {\n              openMovieInfoModal();\n              loader.off();\n            });\n          } else if (\n            event.target.classList.contains('pagination-container__next-button')\n          ) {\n            topFunction();\n            // loader.on();\n            currentPage++;\n            nextfunction(currentPage).then(() => {\n              openMovieInfoModal();\n              loader.off();\n            });\n          }\n        });\n      });\n}","export { compileGenreDictionary };\nimport { FetchMoveApi } from './FetchMove';\n\nasync function compileGenreDictionary() {\n  /**\n   * Function returning dictionary of genre IDs and names\n   * needed for creating movie cards\n   */\n\n  let genre_dictionary = {};\n\n  const fetch_movie = new FetchMoveApi();\n  return fetch_movie\n    .getMoviesGenresList()\n    .then(data => {\n      data.genres.forEach(el => (genre_dictionary[el.id] = el.name));\n      return genre_dictionary;\n    })\n    .catch(error => {\n      console.log(error);\n    });\n}\n","export const refs = {\n    paginationNumbers: document.querySelector('.pagination-numbers'),\n  paginationContainer: document.querySelector('.pagination-container'),\n  nextButton: document.querySelector('.pagination-container__next-button'),\n  prevButton: document.querySelector('.pagination-container__prev-button'),\n};\n","export { search_movies };\nimport { createHomeCard, createLibraryCard } from './createCard';\nimport { compileGenreDictionary } from './compileGenreDictionary';\nimport { FetchMoveApi } from './FetchMove';\nimport './openFooterMdl';\nconst wrapper = document.querySelector('.wrapper');\n\nconst search_movies = new FetchMoveApi();\n\nfunction clearResults() {\n  wrapper.innerHTML = '';\n}\n\ndocument\n  .querySelector('.search-bar')\n  .addEventListener('submit', async event => {\n    event.preventDefault();\n    const query = event.target.querySelector('.search-bar__input').value;\n    if (query) {\n      clearResults();\n      const results = await search_movies.getSearching(query, 1);\n      search_movies.searchResults = results.results;\n      compileGenreDictionary().then(genre_dictionary => {\n        search_movies.searchResults.forEach(element => {\n          const draft = createLibraryCard(element, genre_dictionary);\n          wrapper.insertAdjacentHTML('beforeend', draft);\n        });\n      });\n    }\n  });","export { renderHomeGallery };\nimport { FetchMoveApi } from './FetchMove';\nimport { createHomeCard, createLibraryCard } from './createCard';\nimport { compileGenreDictionary } from './compileGenreDictionary';\n\nfunction renderHomeGallery(page) {\n  const get_movies = new FetchMoveApi();\n  const wrapper = document.querySelector('.wrapper');\n  get_movies.getTrendDay(page).then(data => {\n    compileGenreDictionary().then(genre_dictionary => {\n      data.results.forEach(element => {\n        const draft = createHomeCard(element, genre_dictionary);\n        wrapper.insertAdjacentHTML('beforeend', draft);\n      });\n    });\n  });\n}\n"],"names":["parcelRequire","$1CqGm","async","$e57225b693834980$export$284032d691cdd087","genre_dictionary","FetchMoveApi","getMoviesGenresList","then","data","genres","forEach","el","id","name","catch","error","console","log","$ee27a4d7c64fc8c4$export$21666b427502ea6d","paginationNumbers","document","querySelector","paginationContainer","nextButton","prevButton","$1bab9c519cfa82bc$var$fetchMoveApi","$1bab9c519cfa82bc$var$topFunction","body","scrollTop","documentElement","$7mvg5","$9488da62bf55fdf0$var$wrapper","$9488da62bf55fdf0$export$d6e6d906fea483a8","addEventListener","event","preventDefault","query","target","value","innerHTML","results","getSearching","searchResults","element","draft","createLibraryCard","insertAdjacentHTML","page","get_movies","wrapper","getTrendDay","createHomeCard","$a0gzN","openMovieInfoModal","$feD1y","modalFunctions","response","totalNumberOfPages","total_pages","currentPage","paginationMArkup","i","paginationButtons","querySelectorAll","firstDotButtonLocation","lastDotButtonLocation","firstDotButton","createElement","textContent","classList","add","lastDotButton","after","before","createDotsbuttons","button","remove","contains","pageNumber","nextfunction","loader","off"],"version":3,"file":"index.32e81472.js.map"}